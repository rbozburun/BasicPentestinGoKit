package actions

// TO DO
//
// Implement dirlisting, loginpagefinder, tracedetector, usedserverdetector functions.

import (
	"fmt"
	"net/http"
	"strconv"
)

func errCheck(err error) {
	if err != nil {
		fmt.Println(err)
	}
}

func CrossdomainFlag(target string) {
	fmt.Println("\nYour target to check crossdomain.xml:", target)
	last := target[len(target)-1:]

	// Check the URL includes "/"
	if last != "/" {
		target = (target + "/")
	}

	crossd_url := target + "crossdomain.xml"
	resp, err := http.Get(crossd_url)
	errCheck(err)

	if resp.StatusCode > 400 {
		fmt.Println("[!] Status code: " + strconv.Itoa(resp.StatusCode) + " | Crossdomain.xml Couldn't Find!")
	} else if resp.StatusCode == 200 {
		fmt.Println("[+] Crossdomain found: " + crossd_url)
	} else {
		fmt.Println("[i] Redirection detected. Crossdomain file couldn't find.")
	}

}

func DirListing(target string) {
	fmt.Println("Your target to check DirListing:", target)
}

func LoginPageFinder(target string) {
	fmt.Println("Your target to check LoginPageFinder:", target)
}

func TraceDetector(target string) {
	fmt.Println("Your target to check TraceDetector:", target)
}

func ServerDetector(target string) {
	fmt.Println("Your target to check ServerDetector:", target)
}
